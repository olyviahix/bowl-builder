{"version":3,"file":"use-google-sheets.cjs.development.js","sources":["../src/types.ts","../src/index.tsx"],"sourcesContent":["export interface SheetsOption {\n  id: string;\n  headerRowIndex?: number;\n}\nexport interface HookOptions {\n  apiKey: string;\n  sheetId: string;\n  sheetsOptions?: SheetsOption[];\n}\nexport interface Sheet {\n  id: string;\n  data: Array<object>;\n}\nexport interface ApiResponse {\n  url: string;\n  status: number;\n  statusText: string;\n}\nexport interface ErrorResponse {\n  response: ApiResponse;\n}\nexport interface HookState {\n  loading: boolean;\n  called: boolean;\n  error: null | ErrorResponse;\n  data: Sheet[];\n  refetch: () => void;\n}\nexport enum ActionTypes {\n  loading = 'LOADING',\n  error = 'ERROR',\n  success = 'SUCCESS',\n  called = 'CALLED',\n}\nexport type Action =\n  | { type: ActionTypes.loading; payload: HookState['loading'] }\n  | { type: ActionTypes.called; payload: HookState['called'] }\n  | { type: ActionTypes.error; payload: HookState['error'] }\n  | { type: ActionTypes.success; payload: HookState['data'] };\n","import * as React from 'react';\nimport GoogleSheetsMapper from 'google-sheets-mapper';\n\nimport { HookOptions, HookState, ActionTypes, Action } from './types';\n\nconst initialState: HookState = {\n  loading: true,\n  error: null,\n  data: [],\n  called: false,\n  refetch: () => {},\n};\n\nfunction reducer(state: HookState, action: Action): HookState {\n  switch (action.type) {\n    case ActionTypes.loading:\n      return { ...state, loading: action.payload };\n    case ActionTypes.error:\n      return { ...state, error: action.payload };\n    case ActionTypes.success:\n      return { ...state, data: action.payload };\n    case ActionTypes.called:\n      return { ...state, called: action.payload };\n    default:\n      return state;\n  }\n}\n\nconst useGoogleSheets = ({\n  apiKey,\n  sheetId,\n  sheetsOptions = [],\n}: HookOptions): HookState => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const sheets = React.useRef(sheetsOptions);\n\n  const fetchData = React.useCallback(async () => {\n    dispatch({ type: ActionTypes.loading, payload: true });\n    dispatch({ type: ActionTypes.called, payload: false });\n    dispatch({ type: ActionTypes.error, payload: null });\n    dispatch({ type: ActionTypes.success, payload: [] });\n    try {\n      const mappedData = await GoogleSheetsMapper.fetchGoogleSheetsData({\n        apiKey,\n        sheetId,\n        sheetsOptions: sheets.current,\n      });\n\n      dispatch({\n        type: ActionTypes.success,\n        payload: mappedData,\n      });\n    } catch (error) {\n      dispatch({ type: ActionTypes.error, payload: error });\n    } finally {\n      dispatch({ type: ActionTypes.loading, payload: false });\n      dispatch({ type: ActionTypes.called, payload: true });\n    }\n  }, [apiKey, sheetId]);\n\n  const refetch = React.useCallback(() => {\n    if (state.called) {\n      fetchData();\n    }\n  }, [fetchData, state.called]);\n\n  React.useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return {\n    loading: state.loading,\n    error: state.error,\n    data: state.data,\n    called: state.called,\n    refetch,\n  };\n};\n\nexport default useGoogleSheets;\n"],"names":["ActionTypes","initialState","loading","error","data","called","refetch","reducer","state","action","type","payload","success","useGoogleSheets","apiKey","sheetId","sheetsOptions","React","dispatch","sheets","fetchData","GoogleSheetsMapper","fetchGoogleSheetsData","current","mappedData"],"mappings":"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"}